(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{382:function(s,a,t){"use strict";t.r(a);var e=t(46),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),t("h2",{attrs:{id:"_1-git介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-git介绍"}},[s._v("#")]),s._v(" 1 Git介绍")]),s._v(" "),t("h3",{attrs:{id:"_1-1-什么是git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是git"}},[s._v("#")]),s._v(" 1.1 什么是git")]),s._v(" "),t("p",[s._v("按官方的话说:世界上最先进的分布式版本控制工具")]),s._v(" "),t("p",[s._v("如果不用版本控制工具我们怎么整合代码?")]),s._v(" "),t("p",[s._v("这里讲述一个Git出生前的一些事:")]),s._v(" "),t("p",[s._v("大家都知道Linux是一个开源操作系统,是一个举全世界之力创建的一个开源操作系统,大家都把自己写好的源码发给作者Linus Benedict Torvalds(林纳斯·托瓦兹),然后linus再自己一个人Ctrl C + Ctrl V,再取其精华去其糟粕,随着代码库的不断完善,工作量也越来越大,靠人工完成代码整合的难度也越来越大,这个时候版本控制工具就显得尤为重要,但是Linus不喜欢当时比较流行的开源版本控制工具CVS、SVN,因为他们需要联网才能工作,这个时候一个名叫BitMover的公司无偿提供公司旗下的分布式版本控制工具"),t("strong",[s._v("BitKeeper")]),s._v("给Linux社区,这样问题也就算是解决了,并且也相安无事好长一段时间,后来因为社区大牛试图破解BitKeeper的协议,BitMover一生气,就把使用权回收了,然后Linus一人,扶大厦之将倾,挽狂澜于既倒,用了两周时间开发出了现如今闻名于世的Git")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/image-20220507145621984.png",alt:"image-20220507145621984"}})]),s._v(" "),t("h3",{attrs:{id:"_1-2-集中式与分布式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-集中式与分布式"}},[s._v("#")]),s._v(" 1.2 集中式与分布式")]),s._v(" "),t("p",[s._v("集中式:")]),s._v(" "),t("p",[s._v("代码的版本库存放在中央服务器上,工作前从中央服务器上拉取下来,工作后再把代码上传回中央服务器,版本控制需要依赖网络")]),s._v(" "),t("p",[s._v("分布式:")]),s._v(" "),t("p",[s._v("每个人的电脑都是一个完整的版本库,大家可以直接把代码上传到本地仓库,如果需要和他人同步代码直接将代码推送给他人即可,但为了更好更方便的管理代码,一般还是会创建一个远端服务器,用来汇总所有人的代码,大部分提交都是对本地仓库而言的，版本控制不依赖网络")]),s._v(" "),t("h3",{attrs:{id:"_1-3-git安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-git安装"}},[s._v("#")]),s._v(" 1.3 git安装")]),s._v(" "),t("p",[s._v("Linux:")]),s._v(" "),t("p",[s._v("各发行版命令行安装方式: https://git-scm.com/download/linux")]),s._v(" "),t("p",[s._v("Windows:")]),s._v(" "),t("p",[s._v("https://www.jianshu.com/p/414ccd423efc")]),s._v(" "),t("p",[s._v("MacOS:")]),s._v(" "),t("p",[s._v("通过homebrew安装git")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("若未安装homebrew,先安装homebrew,下方为推荐教程,换成国内源")]),s._v(" "),t("p",[s._v("https://zhuanlan.zhihu.com/p/59805070")])]),s._v(" "),t("li",[t("p",[s._v("安装git")]),s._v(" "),t("p",[s._v("brew install git")])])]),s._v(" "),t("p",[s._v("安装完成还需以下配置,向git自报家门:")]),s._v(" "),t("blockquote",[t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your Name"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"email@example.com"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("p",[s._v("本系统使用版本为"),t("strong",[s._v("2.29.2")])]),s._v(" "),t("h3",{attrs:{id:"_1-4-git作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-git作用"}},[s._v("#")]),s._v(" 1.4 git作用")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("代码汇总。项目开发往往会有很多个人参与,git的一个核心功能就是整合各个人员的代码")])]),s._v(" "),t("li",[t("p",[s._v("代码回滚。如果出现了项目事故,比如代码不小心删了,或者代码越改问题越大,那就可以通过git回滚到之前的版本")])]),s._v(" "),t("li",[t("p",[s._v("分支管理。开发人员可以创建自己的分支进行项目的开发,这样怎么样都只是影响自己的项目不会对他人造成影响")])])]),s._v(" "),t("p",[s._v("上班第一件事就是从远端仓库拉取代码到你本地,下班最后一件是就是需要把今天写完的代码上传到到公司的远端仓库(一般是Github或者Gitlab)\n(具体命令稍后会介绍)")]),s._v(" "),t("h3",{attrs:{id:"_1-5-git工作区域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-git工作区域"}},[s._v("#")]),s._v(" 1.5 git工作区域")]),s._v(" "),t("p",[s._v("在开始使用之前,得先说明一下git核心的四大区域:")]),s._v(" "),t("p",[s._v("见下图,从右至左分别是:远端仓库 本地仓库 暂存区  工作区\t"),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210220170942.png",alt:"20200902160147674"}})]),s._v(" "),t("p",[s._v("具体样子见下图:")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210223083908.png",alt:"image-20210223083908082"}}),s._v(" "),t("ol",[t("li",[s._v("springboot-demo目录下,除.git目录外的所有内容都属于工作区")]),s._v(" "),t("li",[s._v(".git文件夹下的index为暂存区,里面存放"),t("strong",[s._v("临时改动的内容")]),s._v(",本质上是一个"),t("strong",[s._v("文件")])]),s._v(" "),t("li",[s._v(".git文件夹下除index文件以外,其他的内容加起来统称为本地仓库也叫本地版本库")]),s._v(" "),t("li",[s._v("远端仓库(Remote) 一般是GitHub或者Gitlab等")])]),s._v(" "),t("h2",{attrs:{id:"_2-git基本命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-git基本命令"}},[s._v("#")]),s._v(" 2 git基本命令")]),s._v(" "),t("h3",{attrs:{id:"_2-1-本地命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-本地命令"}},[s._v("#")]),s._v(" 2.1 本地命令")]),s._v(" "),t("h4",{attrs:{id:"_2-1-1-本地仓库搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-本地仓库搭建"}},[s._v("#")]),s._v(" 2.1.1 本地仓库搭建")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("创建文件夹")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" testgit\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" testgit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("初始化文件夹")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("p",[s._v("这里我们就创建了一个空的本地仓库,里面会自动生成一个.git的隐藏目录,用于跟踪管理版本库,由git自己维护,"),t("strong",[s._v("没事别碰他")]),s._v(",不然可能会破坏git仓库")]),s._v(" "),t("h4",{attrs:{id:"_2-1-2-本地仓库使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-本地仓库使用"}},[s._v("#")]),s._v(" 2.1.2 本地仓库使用")]),s._v(" "),t("p",[s._v("首先在工作区(写代码的地方)创建一个文件 hello.md,内容如下:")]),s._v(" "),t("blockquote",[t("p",[s._v("我铠他超,")]),s._v(" "),t("p",[s._v("为希丝特莉亚献出心脏")])]),s._v(" "),t("p",[s._v("创建后,我们可以在,命令行通过以下命令将hello.md加入到暂存区")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" hello.md \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("或者")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("前者是添加单个文件到暂存区,后者是添加所有文件到暂存区")]),s._v(" "),t("p",[s._v("在通过以下命令将代码从暂存区提交到本地仓库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"新增两行没啥用的数据"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("每次commit操作相当于创建一次快照, -m参数后面跟的是快照的备注内容,这项是必填项,为了回滚时更方便找到需要回滚的版本")]),s._v(" "),t("p",[t("strong",[s._v("只有先add到暂存区的文件才可以commit到本地仓库")])]),s._v(" "),t("p",[s._v("可通过以下命令来查看文件状态,看看是否有文件还没加入到暂存区,是否暂存区还有文件还没提交到本地仓库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("也可以在修改文件之后,通过"),t("code",[s._v("git diff 文件名")]),s._v("来查看有何变化")]),s._v(" "),t("p",[s._v("例如:")]),s._v(" "),t("p",[s._v("我将hello.md修改为:")]),s._v(" "),t("blockquote",[t("p",[s._v("我铠他超,")]),s._v(" "),t("p",[s._v("为希丝特莉亚献出心脏,")]),s._v(" "),t("p",[s._v("重铸马莱荣光,我辈义不容辞")])]),s._v(" "),t("p",[s._v("之后通过以下命令查看更新了哪些内容")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" hello.md\t\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210222153013.png",alt:"image-20210222153013346"}}),s._v(" "),t("p",[s._v("可以看出新加了一行内容")]),s._v(" "),t("p",[s._v("之后再提交一次(今后版本回滚时用的上)")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"再加一行"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("这里我们在创建一个文件world.md")]),s._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225095401.png",alt:"image-20210225095401875"}}),s._v(" "),t("p",[s._v("之后再提交一下代码")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"创建一个新文件"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("此时我们在world.md里再加一行")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/image-20220507145732214.png",alt:"image-20220507145732214"}}),s._v(" "),t("p",[s._v("突然你意识到,第二句话可能对健康有所威胁,于是你想到了删除这句话,在这里我们可以直接进入文件删除最后一行,非常简单,但在代码的世界里,有时候东改一行西改一行,你根本不知道你改了哪些东西,于是你可以通过"),t("code",[s._v("git checkout -- 文件名")]),s._v("丢弃修改的内容,这里的 "),t("strong",[s._v("--")]),s._v(" 很重要,代表着撤销操作,如果省略了"),t("code",[s._v("git checkout")]),s._v("就会变成切换分支操作(有关分支操作后续会介绍)")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- world.md\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("在查看文本内容")]),s._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225095401.png",alt:"image-20210225095401875"}}),s._v(" "),t("p",[s._v("发现内容已经撤销了,在这里有两种情况:")]),s._v(" "),t("ol",[t("li",[s._v("文件还没添加到暂存库,那就撤销到最近一次版本库")]),s._v(" "),t("li",[s._v("文件已经添加到版本库,那就撤销到添加到暂存区后的状态")])]),s._v(" "),t("p",[s._v("如果你写完之后,不小心"),t("code",[s._v("git add .")]),s._v("把内容添加到暂存区了,还是可以通过"),t("code",[s._v("git reset HEAD <文件名>")]),s._v(",可以把暂存区的内容撤销掉,可自行测试")]),s._v(" "),t("p",[t("strong",[s._v("reset")]),s._v("不仅可以把暂存区的内容撤销掉,还可以实现版本回滚,详见下文")]),s._v(" "),t("p",[s._v("如果你是个狠人,你想着干脆直接就给这个文件删了,在平时直接"),t("code",[s._v("rm -rf world.md")]),s._v("就结束了,但是我们是版本控制工具呀,能有那么简单吗?我们先删除文件,之后输入"),t("code",[s._v("git status")]),s._v("查看一下状态")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225101115.png",alt:"image-20210225101115310"}})]),s._v(" "),t("p",[s._v("此时,工作区与版本库就不一致了,我们可以通过"),t("code",[s._v("git rm <文件名>")]),s._v("来将文件从版本库中彻底删除")]),s._v(" "),t("p",[s._v("但你也可能突然意识到,男人就得敢作敢当,关键是身体好抗得住揍,于是可以通过"),t("code",[s._v("git resotre <file>")]),s._v("来恢复文件")]),s._v(" "),t("h3",{attrs:{id:"_2-2-远端命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-远端命令"}},[s._v("#")]),s._v(" 2.2 远端命令")]),s._v(" "),t("p",[s._v("前面说的都是在本地上的操作,而远端仓库如果自己一个人就搭建一个Git服务器,明显是没啥必要的,好在现在市面上有一个非常棒的网站:"),t("strong",[s._v("github.com")]),s._v(",每个人仅需注册一个账户,就可以在这个网站上搭建远程仓库。")]),s._v(" "),t("h4",{attrs:{id:"_2-2-1-远程仓库搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-远程仓库搭建"}},[s._v("#")]),s._v(" 2.2.1 远程仓库搭建")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("先查看主目录是否有.ssh目录,没有则在命令行输入以下内容创建SSH Key,用于github认证身份时使用")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("ssh-keygen -t rsa -C "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"youremail@example.com"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("登录github -> 点击右上角下拉菜单中的Settings -> SSH and GPG keys -> 把.ssh目录下的id_rsa.pub中的内容粘贴到Key里,目的是为了让当你上传或者拉取内容时,github能对身份进行认证")]),s._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210224152330.png",alt:"image-20210224152330582"}})]),s._v(" "),t("li",[t("p",[s._v("创建新的repository")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("创建页面如下:\n"),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210224155102.png",alt:"image-20210224155102012"}})])]),s._v(" "),t("li",[t("p",[s._v("创建后页面如下:\n"),t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210224155313.png",alt:"image-20210224155313047"}})])])])]),s._v(" "),t("li",[t("p",[s._v("将先创建的远程仓库与本地仓库绑定")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("进入本地文件夹")])]),s._v(" "),t("li",[t("p",[s._v("输入以下命令,主要要替换成你自己的(可从上面创建后页面中找到)")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin https://github.com/bean1006/testgit.git/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("通过以下命令将本地commit的内容推送的远程服务器(首次推送需要使用-u指定分支,这样git会将本地master与远端master分支绑定起来)")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -u origin master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("此时刷新页面就会发现远端仓库多了一个hello.md的文件,说明我们上传成功了")])]),s._v(" "),t("li",[t("p",[s._v("当我需要在另一台电脑快速克隆这个远程仓库的内容,则可以在另一台电脑上的命令行输入(快速克隆命令命令可在远程仓库页面看到)")])])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone --depth"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" https://github.com.cnpmjs.org/bean1006/testgit.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("--depth")]),s._v("是克隆深度,--depth=1,表示只克隆最近一次commit")]),s._v(" "),t("ol",{attrs:{start:"8"}},[t("li",[s._v("可以用"),t("code",[s._v("git remote")]),s._v("查看远程库信息 ,或"),t("code",[s._v("git remote -v")]),s._v("查看详细内容")])]),s._v(" "),t("p",[s._v("这样今后本电脑和另一台电脑都可以通过远程仓库来同步修改内容了")]),s._v(" "),t("h4",{attrs:{id:"_2-2-2-远程仓库使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-远程仓库使用"}},[s._v("#")]),s._v(" 2.2.2 远程仓库使用")]),s._v(" "),t("p",[s._v("可参照此图(和上面的一样)")]),s._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210220170942.png",alt:"20200902160147674"}}),s._v(" "),t("p",[s._v("当我们来到公司做的第一件事就是通过以下命令拉取代码")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("当我们完成今天的代码任务后,就可以通过以下内容上传到服务器")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx模块完成"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("其中pull是直接将代码从远程仓库下拉到工作区,我们也可以通过fetch将代码拉取到本地仓库,才通过checkout拉到工作区,这里涉及到分支内容了下面会介绍")]),s._v(" "),t("h3",{attrs:{id:"_2-3-命令汇总"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-命令汇总"}},[s._v("#")]),s._v(" 2.3 命令汇总")]),s._v(" "),t("p",[s._v("本地:")]),s._v(" "),t("p",[s._v("文件加入暂存区: "),t("code",[s._v("git add 文件名")]),s._v("或"),t("code",[s._v("git add .")])]),s._v(" "),t("p",[s._v("文件提交到本地仓库: "),t("code",[s._v('git commit -m "备注内容"')])]),s._v(" "),t("p",[s._v("查看文件状态: "),t("code",[s._v("git status")])]),s._v(" "),t("p",[s._v("查看文件修改内容: "),t("code",[s._v("git diff 文件名")])]),s._v(" "),t("p",[s._v("撤销文件内容: "),t("code",[s._v("git checkout -- 文件名")])]),s._v(" "),t("p",[s._v("从版本库删除文件: "),t("code",[s._v("git rm 文件名")])]),s._v(" "),t("p",[s._v("从版本库恢复文件: "),t("code",[s._v("git restore 文件名")])]),s._v(" "),t("p",[s._v("远端:")]),s._v(" "),t("p",[s._v("将本地仓库与远程仓库绑定: "),t("code",[s._v("git remote add origin 远程仓库git地址")])]),s._v(" "),t("p",[s._v("首次推送代码: "),t("code",[s._v("git push -u origin master")])]),s._v(" "),t("p",[s._v("克隆远程仓库: "),t("code",[s._v("git clone --depth=1 远程仓库git地址")])]),s._v(" "),t("p",[s._v("拉取代码: "),t("code",[s._v("git pull")])]),s._v(" "),t("p",[s._v("上传代码(需先commit,上传到当前本地分支同名的远程分支上): "),t("code",[s._v("git push")])]),s._v(" "),t("p",[s._v("上传代码到指定分支: "),t("code",[s._v("git push origin 分支名")])]),s._v(" "),t("h2",{attrs:{id:"_3-版本管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-版本管理"}},[s._v("#")]),s._v(" 3 版本管理")]),s._v(" "),t("h3",{attrs:{id:"_3-1-版本回滚"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-版本回滚"}},[s._v("#")]),s._v(" 3.1 版本回滚")]),s._v(" "),t("p",[s._v("首先查看以前的版本")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210224162821.png",alt:"image-20210224162821710"}}),s._v(" "),t("ol",[t("li",[t("p",[s._v("HEAD为指针,指向当前版本的master分支以及对应远端的master分支(origin默认对应远端仓库),git是通过HEAD来实现版本的切换")])]),s._v(" "),t("li",[t("p",[s._v("从"),t("strong",[s._v("2.2 git基本命令")]),s._v("可知,一共提交了两次,展示结果中,git是按commit时间从近到远排列的")])])]),s._v(" "),t("p",[s._v("如果我们想回退到前一个版本,我们可以输入以下内容回到上个版本,其中一个**^**,是回退一个版本")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard HEAD^\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如果回退十个版本,写十个**^"),t("strong",[s._v("明显是不现实的,所以可以写成")]),s._v("HEAD~10**")]),s._v(" "),t("p",[s._v("此时查看文本内容:")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210224172227.png",alt:"image-20210224172227561"}}),s._v(" "),t("p",[s._v("发现已经回头到上一个版本了再查看日志")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210224171711.png",alt:"image-20210224171711768"}}),s._v(" "),t("p",[s._v("发现最新版本已经不可查看了,那该如何回到最新版本呢,查看我们上上张图,发现commit后面会跟着一串码,而这个码就是我们的版本号,我们可以通过版本号使当前HEAD指针指向我们所需要的版本,版本号可不用写全,参考如下:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard 5cd0\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这个方法也可以回滚到任一版本(只要你能记住版本号)此时再看日志")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210224172120.png",alt:"image-20210224172120424"}}),s._v(" "),t("p",[s._v("发现最新版本又出现了,再看看文本内容")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210224172210.png",alt:"image-20210224172210067"}}),s._v(" "),t("p",[s._v("一切尽在掌握")]),s._v(" "),t("h3",{attrs:{id:"_3-2-命令汇总"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-命令汇总"}},[s._v("#")]),s._v(" 3.2 命令汇总")]),s._v(" "),t("p",[s._v("查看commit记录: "),t("code",[s._v("git log")])]),s._v(" "),t("p",[s._v("查看缩略版commit记录: "),t("code",[s._v("git log --graph --pretty=oneline --abbrev-commit")])]),s._v(" "),t("p",[s._v("回退到上一个版本: "),t("code",[s._v("git reset --hard HEAD^")])]),s._v(" "),t("p",[s._v("回退到上n个版本: "),t("code",[s._v("git reset --hard HEAD~n")])]),s._v(" "),t("p",[s._v("回退到某个版本: "),t("code",[s._v("git reset --hard commit号")])]),s._v(" "),t("h2",{attrs:{id:"_4-分支管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-分支管理"}},[s._v("#")]),s._v(" 4 分支管理")]),s._v(" "),t("h3",{attrs:{id:"_4-1-分支介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-分支介绍"}},[s._v("#")]),s._v(" 4.1 分支介绍")]),s._v(" "),t("p",[s._v("如果是一个人开发也就算了,但是往往一个项目是一群人一起开发,如果某人开发一个功能预计开发两天,第一天只开发了百分之五十,然后上传代码,那别人调用代码库就有可能会出错,但是如果等全部代码完成后再上传,那每天工作的进度就不好统计了,于是分支也就应运而生了,每个人可以创建自己的分支,每天完成任务后往自己的分支里提交代码,最后再将自己分支与总分支代码进行合并")]),s._v(" "),t("p",[t("strong",[s._v("git建议在开发时尽可能的使用分支")])]),s._v(" "),t("h3",{attrs:{id:"_4-2-分支的创建与合并"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-分支的创建与合并"}},[s._v("#")]),s._v(" 4.2 分支的创建与合并")]),s._v(" "),t("p",[s._v("当git创建时,都会默认有一个分支,也就是master分支,根据版本回滚模块,我们知道分支是这样线性运作的:")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225141135.png",alt:"image-20210225141135811"}}),s._v(" "),t("p",[s._v("HEAD指针指向当前分支,当前分支(master)指向某一个版本(这里是版本二)")]),s._v(" "),t("p",[s._v("随着我们不断地"),t("strong",[s._v("commit")]),s._v(",慢慢会变成这样")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225141356.png",alt:"image-20210225141356928"}}),s._v(" "),t("p",[s._v("当开发到版本二的时候我们可以创建一个个人的dev分支")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b dev\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面等同于")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch dev\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout dev\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("等同于")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git switch -c dev\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("该命令为创建一个叫dev的分支,并将HEAD指针指向该分支,具体情况如下图")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225141619.png",alt:"image-20210225141619693"}}),s._v(" "),t("p",[s._v("通过"),t("code",[s._v("git branch")]),s._v("查看一下现在有哪些分支了")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225144211.png",alt:"image-20210225144211601"}})]),s._v(" "),t("p",[s._v("一共有两个分支,*号表示当前所在分支")]),s._v(" "),t("p",[s._v("之后在dev分支上上完成后续开发")]),s._v(" "),t("p",[s._v("我们再在hello.md里添加一行,再add+commit")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225144529.png",alt:"image-20210225144529126"}})]),s._v(" "),t("p",[s._v("此时我们的版本库变成了这样(一共提交了三次)")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225144622.png",alt:"image-20210225144622891"}}),s._v(" "),t("p",[s._v("此时我们的master分支还停留在版本二上")]),s._v(" "),t("p",[s._v("如果想把dev分支上的内容整合到master分支上,那么我们需要做以下两件事:")]),s._v(" "),t("p",[s._v("第一步: 通过"),t("code",[s._v("git checkout master")]),s._v("切换到master分支,注意,因为checkout会与前面说的撤销操作混淆,所以新版的git可通过"),t("code",[s._v("git switch 分支名")]),s._v("来进行分支切换")]),s._v(" "),t("p",[s._v("查看此刻分支与文件内容")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225145201.png",alt:"image-20210225145201548"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225145227.png",alt:"image-20210225145227206"}})]),s._v(" "),t("p",[s._v("此时内容还停留在前一个版本上")]),s._v(" "),t("p",[s._v("第二步: 在通过"),t("code",[s._v("git merge 分支名")]),s._v("来把dev的内容整合到master上,在查看内容")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225145404.png",alt:"image-20210225145404615"}})]),s._v(" "),t("p",[s._v("现在就变成了这个情况")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225151026.png",alt:"image-20210225151026056"}}),s._v(" "),t("p",[s._v("然后我们在卸磨杀驴,删除掉dev分支,具体命令为"),t("code",[s._v("git branch -d <name>")])]),s._v(" "),t("p",[s._v("在查看此时有哪些分支")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225145740.png",alt:"image-20210225145740919"}})]),s._v(" "),t("h3",{attrs:{id:"_4-3-合并冲突"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-合并冲突"}},[s._v("#")]),s._v(" 4.3 合并冲突")]),s._v(" "),t("p",[s._v("项目不是一个人完成的,而针对同一个文件,就有可能出现两个人同时做出了修改,那么到合并的时候,git到底听谁的?谁来合并谁?")]),s._v(" "),t("p",[s._v("秉承着人人平等的思想,git有着自己的解决冲突的方式")]),s._v(" "),t("p",[s._v("首先我们先来制造点冲突")]),s._v(" "),t("p",[s._v("当前我们在master分支上,我们修改一下hello.md")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225152852.png",alt:"image-20210225152852663"}})]),s._v(" "),t("p",[s._v("add+commit后再切换到dev分支修改一下hello.md(我重情重义,决定创建回来了)")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'又加一行'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch -c dev\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225153338.png",alt:"image-20210225153338481"}})]),s._v(" "),t("p",[s._v("此时情况为")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225153855.png",alt:"image-20210225153855648"}}),s._v(" "),t("p",[s._v("产生了两条分支,我们再回到master分支,用 "),t("code",[s._v("git merge dev")]),s._v(" 对dev分支进行汇总")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225154455.png",alt:"image-20210225154455792"}})]),s._v(" "),t("p",[s._v("当前我们已经创建好冲突了,那么该如何解决呢")]),s._v(" "),t("p",[s._v("上图已经提示,冲突再hello.md这个文件里,那我们进入文件,发现此时文件已经变为")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225154608.png",alt:"image-20210225154608307"}})]),s._v(" "),t("p",[t("strong",[s._v("<<<<<<<<")]),s._v(" 表示当前分支也就是master")]),s._v(" "),t("p",[t("strong",[s._v("========")]),s._v(" 表示为分隔符")]),s._v(" "),t("p",[t("strong",[s._v(">>>>>>>>")]),s._v(" 表示为另一分支也就是dev")]),s._v(" "),t("p",[s._v("此时我们可对冲突内容进行修改")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225154913.png",alt:"image-20210225154913493"}})]),s._v(" "),t("p",[s._v("在进行提交操作")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'冲突已解决'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge dev\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("此时分支情况为")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225155326.png"}}),s._v(" "),t("p",[s._v("dev停留在了原处,master已经指向版本五了,此时已经完成冲突的解决了,再再次卸磨杀驴"),t("code",[s._v("git branch -d dev")])]),s._v(" "),t("p",[s._v("(为了后续分支策略图好看一点)")]),s._v(" "),t("h3",{attrs:{id:"_4-4-分支策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-分支策略"}},[s._v("#")]),s._v(" 4.4 分支策略")]),s._v(" "),t("p",[s._v("默认情况下git在合并时会采用"),t("strong",[s._v("Fast forward")]),s._v("的分支管理策略,像在将分支之前所有的合并方式,都是"),t("strong",[s._v("Fast forward")]),s._v(",这样做的后果就是,省略了合并步骤")]),s._v(" "),t("p",[s._v("比如版本一到版本二,版本二到版本三就是用Fast forward,这样做的话,优点是简单明了,而缺点就是看不出合并痕迹")]),s._v(" "),t("p",[s._v("打个比方,版本四到版本五我们知道提交了新的commit,但是我们不知道是不是从其他分支merge后得到的结果,还是自己修改后add+commit得到的结果")]),s._v(" "),t("p",[s._v("(上图版本四到版本五是我根据逻辑画出来的,git在展示时,还是按照版本一到版本二那样展示可输入"),t("code",[s._v("git log")]),s._v("查看)")]),s._v(" "),t("p",[s._v("而为了能看出合并痕迹,我们可以在merge时使用 "),t("strong",[s._v("--no-ff")]),s._v("参数")]),s._v(" "),t("p",[s._v("做个简单的对照测试")]),s._v(" "),t("p",[s._v("我们创建并切换到dev分支,随便写一行")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225162240.png",alt:"image-20210225162240887"}})]),s._v(" "),t("p",[s._v("add+commit后再切换回master,调用如下命令:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --graph --pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline --abbrev-commit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225164855.png",alt:"image-20210225164445547"}})]),s._v(" "),t("p",[s._v("上图只是出现新的commit,但是不知道是否进行了合并操作")]),s._v(" "),t("p",[s._v("同样步骤只是命令不同,做个对照实验:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge  --no-ff -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'不用Fast forward'")]),s._v(" dev\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --graph --pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline --abbrev-commit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("因为本次merge会创建一个新分支,所以加一个-m参数")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225163816.png",alt:"image-20210225163816768"}})]),s._v(" "),t("p",[s._v("可以看出我们在ed6aa53到b152f62时处有一个合并操作(红色与绿色分支合并)")]),s._v(" "),t("h3",{attrs:{id:"_4-5-保存工作区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-保存工作区"}},[s._v("#")]),s._v(" 4.5 保存工作区")]),s._v(" "),t("p",[s._v("当前正在dev分支上写代码,突然来了个bug -- "),t("strong",[s._v("bug01")]),s._v(",正常情况下会在主分支基础上创建一个bug01的分支然后改bug,但是当前分支上的功能还没实现完,工作区内的文件还没法提交,所幸git提供了隐藏当前工作区修改内容的功能,在命令行输入以下命令")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225171809.png",alt:"image-20210225171809382"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225171819.png",alt:"image-20210225171819689"}})]),s._v(" "),t("p",[s._v("发现dev分支上的内容已经给保存起来了,当前工作区已经回到了初始状态")]),s._v(" "),t("p",[s._v("当我们修改完bug后,需要让工作区回退到一开始的状态,我们可以输入"),t("code",[s._v("git stash list")]),s._v("查看隐藏起来的内容")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210225172113.png",alt:"image-20210225172113449"}})]),s._v(" "),t("p",[s._v("此刻只有**stash@{0}**这一个stash,你可以输入多次"),t("code",[s._v("git stash")]),s._v("来保存多个stash")]),s._v(" "),t("p",[s._v("此时我们只是查到了有一个stash,而恢复stash的方式有两个:")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("先恢复stash,再手动删除stash")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash apply stash"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash drop stash"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("恢复并删除stash")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash pop\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("p",[s._v("仔细想一想,如果有master上有bug的话,那建立在master分支只上的dev分支不也有相同的bug,那再同样的操作做一遍不就显得很麻烦了,git提供一个命令"),t("code",[s._v("git cherry-pick 版本号")]),s._v("可以克隆一个特定的commit到当前分支,这样就不需要再在当前分支修改一遍bug了")]),s._v(" "),t("h3",{attrs:{id:"_4-6-多人协作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-多人协作"}},[s._v("#")]),s._v(" 4.6 多人协作")]),s._v(" "),t("p",[s._v("一般公司远端仓库有一个master分支和若干个dev分支,我们完成任务后上传时,可以通过"),t("code",[s._v("git push origin 分支名")]),s._v("上传到指定分支,但并不是所有分支都需要上传到远端仓库的,比如改bug分支(你能告诉你老板你写了多少bug吗)")]),s._v(" "),t("p",[s._v("当你首次克隆代码到本地时,默认只有master分支,你可以创建本地dev分支,并且绑定到远端dev分支上")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b dev origin/dev\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("当你完成commit,打算push到dev分支上时,git可能会提示有冲突")]),s._v(" "),t("p",[s._v("解决方法:")]),s._v(" "),t("p",[s._v("使用"),t("code",[s._v("git pull")]),s._v("先将代码拉取到本地,合并后再推送,如果"),t("code",[s._v("git pull")]),s._v("也失败了,说明你没有将本地dev与远端dev做关联,可以使用以下命令做关联后,再推送")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --set-upstream-to"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("origin/dev dev\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("解决冲突方式参考4.3")]),s._v(" "),t("h3",{attrs:{id:"_4-7-rebase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-rebase"}},[s._v("#")]),s._v(" 4.7 Rebase")]),s._v(" "),t("p",[s._v("主要作用有二:")]),s._v(" "),t("ol",[t("li",[s._v("分支合并")]),s._v(" "),t("li",[s._v("commit改写")])]),s._v(" "),t("h4",{attrs:{id:"_4-7-1-分支合并"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-1-分支合并"}},[s._v("#")]),s._v(" 4.7.1 分支合并")]),s._v(" "),t("p",[s._v("首先我们目前项目状态是这样的")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226155045.png",alt:"image-20210226155045018"}}),s._v(" "),t("p",[s._v("当前HEAD指针指向master分支,且master分支指向当前版本,我们在这个版本的基础上,创建一个dev分支")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226155621.png",alt:"image-20210226155621661"}}),s._v(" "),t("p",[s._v("而后我们在master分支上前进一个版本")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226162745.png",alt:"image-20210226162745375"}}),s._v(" "),t("p",[s._v("dev分支再"),t("code",[s._v("git merge master")]),s._v("也前进了一个版本,那结果就变成这样")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226162127.png",alt:"image-20210226162127610"}}),s._v(" "),t("p",[s._v("dev是从master分支分出来的,随后又同步了master分支的改动,可以说dev版本是没什么必要的")]),s._v(" "),t("p",[s._v("为了整理分支")]),s._v(" "),t("p",[s._v("首先先回到dev分支merge前的状态,也就是")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226162845.png",alt:"image-20210226162845516"}}),s._v(" "),t("p",[s._v("然后再在dev分支上使用"),t("code",[s._v("git rebase master")]),s._v(",此刻就变成了")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226162402.png",alt:"image-20210226162401971"}}),s._v(" "),t("p",[s._v("对比rebase与merge的结果可以发现简洁了不少")]),s._v(" "),t("h4",{attrs:{id:"_4-7-2-commit次数改写"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-2-commit次数改写"}},[s._v("#")]),s._v(" 4.7.2 commit次数改写")]),s._v(" "),t("p",[s._v("当前项目环境如下")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226162402.png",alt:"image-20210226162401971"}}),s._v(" "),t("p",[s._v("此刻dev再向前commit3次,然后这3次commit都是修改了同样的一个接口")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226171438.png",alt:"image-20210226171438689"}})]),s._v(" "),t("p",[s._v("因为修改的是相同的内容所以说: "),t("strong",[s._v("master版本")]),s._v(" -> "),t("strong",[s._v("版本A")]),s._v(" -> "),t("strong",[s._v("版本B")]),s._v("- > "),t("strong",[s._v("版本C")])]),s._v(" "),t("p",[s._v("其实等价于  "),t("strong",[s._v("master版本")]),s._v(" -> "),t("strong",[s._v("版本C")])]),s._v(" "),t("p",[s._v("如果3次还好,如果是30次,那整个分枝树就会特别的冗长")]),s._v(" "),t("p",[s._v("做一个测试,我将hello.md添加了3次内容,并且commit了3次")]),s._v(" "),t("p",[s._v("此时我们可以通过"),t("code",[s._v("git rebase -i HEAD~n")]),s._v("来指定合并多少次commit")]),s._v(" "),t("p",[t("code",[s._v("git log")]),s._v("查看commit记录")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226175703.png",alt:"image-20210226175703684"}}),s._v(" "),t("p",[s._v("我们将最近三个版本合并,则可以输入")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase -i HEAD~3\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("-i是进入交互模式,页面展示内容如下:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" p f07fc36 A\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" s 8e65a18 B\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" s bd26f6f C\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Rebase 044f0cc..14c0a82 onto 044f0cc (3 commands)")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Commands:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# p, pick <commit> = use commit")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# r, reword <commit> = use commit, but edit the commit message")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# e, edit <commit> = use commit, but stop for amending")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# s, squash <commit> = use commit, but meld into previous commit")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# f, fixup <commit> = like "squash", but discard this commit\'s log message')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# x, exec <command> = run command (the rest of the line) using shell")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b, break = stop here (continue rebase later with 'git rebase --continue')")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# d, drop <commit> = remove commit")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# l, label <label> = label current HEAD with a name")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# t, reset <label> = reset HEAD to a label")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .       create a merge commit using the original merge commit's")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .       message (or the oneline, if no original merge commit was")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .       specified). Use -c <commit> to reword the commit message.")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# These lines can be re-ordered; they are executed from top to bottom.")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you remove a line here THAT COMMIT WILL BE LOST.")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("27")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# However, if you remove everything, the rebase will be aborted.")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("p",[s._v("注:")]),s._v(" "),t("ol",[t("li",[s._v("第一行到第三行为主要操作内容,从左至右分别是"),t("strong",[s._v("命令")]),s._v("->  "),t("strong",[s._v("commit号")]),s._v(" -> "),t("strong",[s._v("版本备注")])]),s._v(" "),t("li",[s._v("后面都是备注,第七行到第十八行为命令说明")]),s._v(" "),t("li",[s._v("我们选择需要执行的命令,我们选择了s与p,s的内容为合并前一个内容并提交")]),s._v(" "),t("li",[s._v("保存提交后可能会报错"),t("code",[s._v("error: cannot 'squash' without a previous commit")]),s._v(",原因是不能合并已提交到远端仓库的版本")])]),s._v(" "),t("p",[s._v("此时会保存退出后会展示以下内容")]),s._v(" "),t("img",{staticStyle:{zoom:"25%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226182651.png",alt:"image-20210226182651663"}}),s._v(" "),t("p",[s._v("再次输入"),t("code",[s._v("git log")])]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210226182754.png",alt:"image-20210226182754589"}}),s._v(" "),t("p",[s._v("发现ABC三个版本已经合并为一个了")]),s._v(" "),t("h3",{attrs:{id:"_4-8-命令汇总"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-命令汇总"}},[s._v("#")]),s._v(" 4.8 命令汇总")]),s._v(" "),t("p",[s._v("查看分支: "),t("code",[s._v("git branch")])]),s._v(" "),t("p",[s._v("创建分支: "),t("code",[s._v("git branch 分支名")]),s._v(" 或 "),t("code",[s._v("git checkout 分支名")])]),s._v(" "),t("p",[s._v("删除分支: "),t("code",[s._v("git branch -d 分支名")])]),s._v(" "),t("p",[s._v("强制删除分支(用于分支代码未整合到主分支时使用): "),t("code",[s._v("git branch -D 分支名")])]),s._v(" "),t("p",[s._v("切换分支: "),t("code",[s._v("git checkout 分支名")]),s._v(" 或 "),t("code",[s._v("git switch 分支名")])]),s._v(" "),t("p",[s._v("创建并切换分支："),t("code",[s._v("git checkout -b 分支名")]),s._v(" 或 "),t("code",[s._v("git switch -c 分支名")])]),s._v(" "),t("p",[s._v("合并某分支内容到当前分支: "),t("code",[s._v("git merge 分支名")]),s._v(" 或 "),t("code",[s._v("git rebase 分支名")])]),s._v(" "),t("p",[s._v("修改commit次数: "),t("code",[s._v("git rebase -i HEAD~n")])]),s._v(" "),t("p",[s._v("保存工作区: "),t("code",[s._v("git stash")])]),s._v(" "),t("p",[s._v("查看stash: "),t("code",[s._v("git stash list")])]),s._v(" "),t("p",[s._v("恢复stash: "),t("code",[s._v("git stash apply stash{0}")])]),s._v(" "),t("p",[s._v("删除stash: "),t("code",[s._v("git stash drop stash{0}")])]),s._v(" "),t("p",[s._v("恢复并删除stash: "),t("code",[s._v("git stash pop")])]),s._v(" "),t("p",[s._v("将将其他分支修改内容同步到本分支: "),t("code",[s._v("git cherry-pick 版本号")])]),s._v(" "),t("p",[s._v("本地分支关联远程分支: "),t("code",[s._v("git branch --set-upstream-to=origin/dev dev")])]),s._v(" "),t("h2",{attrs:{id:"_5-标签管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-标签管理"}},[s._v("#")]),s._v(" 5 标签管理")]),s._v(" "),t("h3",{attrs:{id:"_5-1-标签的创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-标签的创建"}},[s._v("#")]),s._v(" 5.1 标签的创建")]),s._v(" "),t("p",[s._v("当我们提交一次commit后,会生成相应的commit号,不过都是一些无规则的数字字母,不方便记忆和查找,就比如我想回滚到某一个版本,我需要先"),t("code",[s._v("git log")]),s._v("查卡该版本的commit号,之后再通过"),t("code",[s._v("git reset --hard 版本号")]),s._v("回滚回去,随着commit次数的增多,查找难度也会越来越大,这个时候,为了能够方便记忆与查找,出现了一种打标签的技术")]),s._v(" "),t("p",[s._v("下图是最新的一次提交记录")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210301112640.png",alt:"image-20210301112640708"}}),s._v(" "),t("p",[s._v("打标签还是十分简单的,我们可以通过下述方式给最新的版本打上标签")]),s._v(" "),t("ol",[t("li",[s._v("切换到需要打标签的分支上")]),s._v(" "),t("li",[s._v("使用命令"),t("code",[s._v("git tag 标签名")])]),s._v(" "),t("li",[s._v("打完标签后可以通过"),t("code",[s._v("git tag")]),s._v("来查看所有标签")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210301113229.png",alt:"image-20210301113229558"}})]),s._v(" "),t("p",[s._v("但这只是给最新版打标签,如果我想要给上周的版本打标签得按照以下步骤:")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("git log --pretty=oneline --abbrev-commit")]),s._v(" 查出版本号")]),s._v(" "),t("li",[t("code",[s._v("git tag 版本号 commit 号")]),s._v(" 给指定commit号的版本打上标签")])]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210301113755.png",alt:"image-20210301113755640"}}),s._v(" "),t("p",[s._v("注意项:标签排序是按照字符串顺序排序,与版本先后顺序无关")]),s._v(" "),t("p",[s._v("还可以通过"),t("code",[s._v('git tag -a 标签名 -m "备注内容" commit号')]),s._v("给标签打上备注")]),s._v(" "),t("p",[s._v("其中 "),t("strong",[s._v("-a")]),s._v("指定标签名 "),t("strong",[s._v("-m")]),s._v("指定备注内容,commit号跟在最后 "),t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210301114148.png",alt:"image-20210301114148665"}})]),s._v(" "),t("p",[s._v("还可以通过"),t("code",[s._v("git show 标签名")]),s._v("来查看具体内容")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210301114236.png",alt:"image-20210301114236681"}}),s._v(" "),t("h3",{attrs:{id:"_5-2-标签推送"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-标签推送"}},[s._v("#")]),s._v(" 5.2 标签推送")]),s._v(" "),t("p",[s._v("当标签创建完成后,可以通过"),t("code",[s._v("git push origin 标签名")]),s._v("将单个标签上传到远端仓库")]),s._v(" "),t("p",[s._v("也可以通过 "),t("code",[s._v("git push origin --tags")]),s._v("将全部标签上传")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210301142141.png",alt:"image-20210301142141496"}})]),s._v(" "),t("h3",{attrs:{id:"_5-3-标签的删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-标签的删除"}},[s._v("#")]),s._v(" 5.3 标签的删除")]),s._v(" "),t("p",[s._v("当然,人有失手,马有失蹄,如果不小心打错标签了也是可以删除的")]),s._v(" "),t("p",[s._v("如果只是在本地,还没push到远端仓库,那可以使用"),t("code",[s._v("git tag -d 标签名")]),s._v("来删除标签")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210301142215.png",alt:"image-20210301142215448"}})]),s._v(" "),t("p",[s._v("如果还需将标签推送到远端仓库的话,还需要使用"),t("code",[s._v("git push :refs/tags/标签名")]),s._v("来删除")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/20210301142332.png",alt:"image-20210301142331928"}})]),s._v(" "),t("h3",{attrs:{id:"_5-4-命令汇总"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-命令汇总"}},[s._v("#")]),s._v(" 5.4 命令汇总")]),s._v(" "),t("p",[s._v("查看所有标签: "),t("code",[s._v("git tag")])]),s._v(" "),t("p",[s._v("给最新版本打标签: "),t("code",[s._v("git tag 标签名")])]),s._v(" "),t("p",[s._v("给指定版本打标签: "),t("code",[s._v("git tag 版本号 commit 号")])]),s._v(" "),t("p",[s._v("查看标签详情: "),t("code",[s._v("git show 标签名")])]),s._v(" "),t("p",[s._v("推送单个标签: "),t("code",[s._v("git push origin 标签名")])]),s._v(" "),t("p",[s._v("推送所有标签: "),t("code",[s._v("git push origin --tags")])]),s._v(" "),t("p",[s._v("删除本地仓库的标签: "),t("code",[s._v("git tag -d 标签名")])]),s._v(" "),t("p",[s._v("删除远端仓库的标签: "),t("code",[s._v("git push :refs/tags/标签名")])])])}),[],!1,null,null,null);a.default=n.exports}}]);