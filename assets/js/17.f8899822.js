(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{390:function(v,a,t){"use strict";t.r(a);var e=t(46),_=Object(e.a)({},(function(){var v=this,a=v.$createElement,t=v._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"maven生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven生命周期"}},[v._v("#")]),v._v(" Maven生命周期")]),v._v(" "),t("p",[v._v("mvn + 空格 + 生命周期参数")]),v._v(" "),t("p",[v._v("生命周期参数如下:")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("clean")]),v._v(" 清除已经编译好的target 文件夹,里面包含已经打好的JAR包或WAR包")]),v._v(" "),t("li",[t("strong",[v._v("validate")]),v._v(" 验证项目")]),v._v(" "),t("li",[t("strong",[v._v("compile")]),v._v(" 编译项目")]),v._v(" "),t("li",[t("strong",[v._v("test")]),v._v(" 编译运行测试代码")]),v._v(" "),t("li",[t("strong",[v._v("package")]),v._v(" 默认执行compile,然后按pom里规定的类型(常见JAR/WAR)打包后放在target文件夹中,target一般放在项目根目录下,与src平级")]),v._v(" "),t("li",[t("strong",[v._v("install")]),v._v(" 默认执行package,然后將包安装到本地仓库中,供其他模块引用")]),v._v(" "),t("li",[t("strong",[v._v("deploy")]),v._v(" 默认执行install,然后將本地仓库中的包推送到远程仓库,供其他程序员引用")])]),v._v(" "),t("p",[v._v("打包的时候会进行大量的测试,从而导致打包速度异常的慢,可以再命令后添加参数**-Dmaven.test.skip=true**,来加速打包过程,例如")]),v._v(" "),t("blockquote",[t("p",[v._v("mvn clean deploy -Dmaven.test.skip=true")])]),v._v(" "),t("h2",{attrs:{id:"maven标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven标签"}},[v._v("#")]),v._v(" Maven标签")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("project")]),v._v(" 项目标签,类比html")]),v._v(" "),t("li",[t("strong",[v._v("parent")]),v._v(" 引用父依赖")]),v._v(" "),t("li",[t("strong",[v._v("groupId")]),v._v(" 组id,依赖包的域名")]),v._v(" "),t("li",[t("strong",[v._v("artifactId")]),v._v(" 项目名")]),v._v(" "),t("li",[t("strong",[v._v("packaging")]),v._v(" 打包类型")]),v._v(" "),t("li",[t("strong",[v._v("version")]),v._v(" 包版本")]),v._v(" "),t("li",[t("strong",[v._v("profile")]),v._v(" 配置文件,针对不同的环境制定不同的配置文件,具体使用见下文")]),v._v(" "),t("li",[t("strong",[v._v("plugin")]),v._v(" 插件,放在"),t("strong",[v._v("build")]),v._v("标签下,可以指定插件的下载位置")]),v._v(" "),t("li",[t("strong",[v._v("distributionManagement、repositories、pluginRepositories")]),v._v(" 配置Maven仓库")]),v._v(" "),t("li",[t("strong",[v._v("dependencyManagement")]),v._v(" 放在顶级pom下,该标签旨在标识项目所需要的所有依赖,在dependencyManagement标签下配置的依赖不生效,只有子pom通过dependency引入才生效")]),v._v(" "),t("li",[t("strong",[v._v("dependency")]),v._v(" 通过依赖坐标引入指定依赖")]),v._v(" "),t("li",[t("strong",[v._v("properties")]),v._v(" 通用占位符,一般用来指定版本")]),v._v(" "),t("li",[t("strong",[v._v("modules")]),v._v(" 子模块")])]),v._v(" "),t("h2",{attrs:{id:"maven-结合idea"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-结合idea"}},[v._v("#")]),v._v(" Maven 结合Idea")]),v._v(" "),t("p",[v._v("双击shift,输入maven打开maven标签")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/image-20220509180016453.png",alt:"image-20220509180016453"}})]),v._v(" "),t("h3",{attrs:{id:"按钮介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按钮介绍"}},[v._v("#")]),v._v(" 按钮介绍")]),v._v(" "),t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/image-20220509180305542.png",alt:"image-20220509180305542"}}),v._v(" "),t("p",[v._v("第一排从左到右依次为:")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("刷新pom,新增依赖时使用")])]),v._v(" "),t("li",[t("p",[v._v("为所有项目生成源代码并更新文件夹")])]),v._v(" "),t("li",[t("p",[v._v("下载源码")])]),v._v(" "),t("li",[t("p",[v._v("引入maven模块,加载其pom.xml就可以")])]),v._v(" "),t("li",[t("p",[v._v("执行maven构建")])]),v._v(" "),t("li",[t("p",[v._v("打开maven命令行")])]),v._v(" "),t("li",[t("p",[v._v("离线模式")])]),v._v(" "),t("li",[t("p",[v._v("跳过编译和运行测试代码")])]),v._v(" "),t("li",[t("p",[v._v("折叠maven文件夹")])]),v._v(" "),t("li",[t("p",[v._v("maven设置")])])]),v._v(" "),t("h3",{attrs:{id:"目录介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录介绍"}},[v._v("#")]),v._v(" 目录介绍")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/image-20220510091026599.png",alt:"image-20220510091026599"}})]),v._v(" "),t("p",[v._v("profile文件夹配合pom文件里的profiles标签可以做到按不同环境切换配置文件")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/image-20220510091224688.png",alt:"image-20220510091224688"}})]),v._v(" "),t("p",[v._v("root文件夹一般是项目的根目录,没有开发所依赖的各类包")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://beanchan-image.oss-cn-guangzhou.aliyuncs.com/image-20220510091409717.png",alt:"image-20220510091409717"}})]),v._v(" "),t("p",[v._v("其余则是项目的子模块,里面包含maven生命周期,pom引入的插件以及该子模块依赖关系")])])}),[],!1,null,null,null);a.default=_.exports}}]);